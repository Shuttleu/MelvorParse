type timer = {
    ticksLeft: number,
    maxTicks: number,
    active: boolean
}
type character = {
    hp: number,
    nextAction: number,
    attackCount: number,
    nextAttack: number,
    isAttacking: boolean,
    firstHit: boolean,
    actionTimer: timer,
    regenTimer :timer,
    turnsTaken: number,
    bufferedRegen: number,
    activeEffects: Map<number, effect>,
    firstMiss: boolean,
    barrier: number
}
type effect = {
    player: boolean,
    type: number,
    damageDealt: number,
    damageTaken: number,
    prameters: Array<string | number>,
    statGroups: Array<string | number>,
    timers: Array<string | number | boolean>
}
type equipment = {
    id: number,
    stackable: number | undefined,
    qty: number | undefined,
    quickEquip: Array<number>
}
type equipmentSet = {
    equipment: Array<equipment>,
    spells: {
        spell: number | undefined,
        aura: number | undefined,
        curse: number | undefined
    },
    prayers: Array<number>
}
export type saveData = {
    header: {
        saveVersion: number,
        saveName: string,
        gameMode: string,
        skillLevel: number,
        gp: number,
        activeTraining: boolean,
        activeTrainingName: string,
        tickTime: number,
        saveTime: number,
        activeNamespaces: Set<string>,
        mods: {
            profileId: string,
            profileName: string,
            mods: Set<number>
        } | undefined,
        namespaces: Map<string, Map<string, number>>
    },
    tickTime: number,
    saveTime: number,
    activeAction: number | undefined,
    pausedAction: number | undefined,
    paused: boolean,
    merchantsPermitRead: boolean,
    gameMode: number,
    characterName: string,
    bank: {
        lockedItems: Array<number>,
        tabs: Array<Map<number, number>>,
        defaultTabs: Map<number, number>,
        sortOrder: Array<number>,
        glowing: Array<number>,
        icons: Map<number, number>
    },
    combat: {
        player: {
            character: character,
            meleeType: number | undefined,
            rangedType: number | undefined,
            magicType: number | undefined,
            prayerPoints: number,
            equipmentSet: number,
            equipmentSets: Array<equipmentSet>,
            foodSlot: number,
            foodSlots: Map<number, number>,
            maxFoodSlot: number,
            summoningTimer: timer,
            soulPoints: number,
            unholyPrayerMultiplier: number
        },
        enemy: {
            character: character,
            state: number,
            attackType: number,
            enemy: number | undefined,
            damageType: number | undefined
        },
        fightInProgress: boolean,
        fightTimer: timer,
        combatActive: boolean,
        combatPassives: Map<number, boolean>,
        combatArea: {
            area: number,
            subArea: number
        } | undefined,
        combatAreaProgress: number,
        monster: number | undefined,
        combatPaused: boolean,
        loot: Map<number, number>,
        slayer: {
            taskActive: boolean,
            task: number | undefined,
            left: number,
            extended: boolean,
            category: number | undefined,
            categories: Map<number, number>,
            timer: timer,
            realm: number
        },
        event: {
            active: number | undefined,
            passives: Array<number>,
            passivesSelected: Array<number>,
            dungeonLength: number,
            dungeonCompletions: Map<number, number>,
            activeEventAreas: number,
            progress: Map<number, number>,
            strongholdTier: number
        }
    },
    goblinRaid: {
        player: {
            character: character,
            meleeType: number | undefined,
            rangedType: number | undefined,
            magicType: number | undefined,
            prayerPoints: number,
            equipmentSet: number,
            equipmentSets: Array<equipmentSet>,
            foodSlot: number,
            foodSlots: Map<number, number>,
            maxFoodSlot: number,
            summoningTimer: timer,
            soulPoints: number,
            unholyPrayerMultiplier: number
            altAttacks: Map<number, Array<number>>
        },
        enemy: {
            character: character,
            state: number,
            attackType: number,
            enemy: number | undefined,
            goblin: goblin
        },
        inProgress: raidfightInProgess,
        spawnTimer: timer,
        active: raidcombatActive,
        passives: raidcombatPassives,
        playerModifiers: raidPlayerModifiers,
        enemyModifiers: raidEnemyModifiers,
        state: raidState,
        difficulty: raidDifficulty,
        bank: {
            lockedItems: raidlockedItems,
            bankTabs: raidbankTabs,
            defaultItemTabs: raiddefaultItemTabs,
            customSortOrder: raidcustomSortOrder,
            glowingItems: raidglowingItems,
            tabIcons: raidtabIcons
        },
        wave: raidWave,
        waveProgress: raidWaveProgress,
        killCount: raidKillCount,
        start: raidStart,
        ownedCrateItems: raidOwnedCrateItems,
        randomModifiers: raidRandomModifiers,
        positiveModifier: raidSelectedPositiveModifier,
        items: {
            weapons: raidItemWeapons,
            armour: raidItemArmour,
            ammo: raidItemAmmo,
            runes: raidItemRunes,
            food: raidItemFoods,
            passives: raidItemPassives
        },
        itemCategory: raidItemCategory,
        positiveModifiers: raidPosMods,
        negativeModifiers: raidNegMods,
        paused: raidPaused,
        history: raidHistories
    },
    minibar: MinibarItems,
    pets: petList,
    shop: {
        items: shopItems,
        purchases: purchaseQty
    },
    itemCharges: itemCharges,
    tutorialComplete: tutorialComplete,
    potions: {
        list: potionList,
        reuse: potionReuse
    },
    stats: {
        woodcutting: woodcuttingStats,
        fishing: fishingStats,
        firemaking: firemakingStats,
        cooking: cookingStats,
        mining: miningStats,
        smithing: smithingStats,
        attack: attackStats,
        strength: strengthStats,
        defence: defenceStats,
        hitpoints: hitpointsStats,
        theiving: theivingStats,
        farming: farmingStats,
        ranged: rangedStats,
        fletching: fletchingStats,
        crafting: craftingStats,
        runecrafting: runecraftingStats,
        magic: magicStats,
        prayer: prayerStats,
        slayer: slayerStats,
        herblore: herbloreStats,
        agility: agilityStats,
        summoning: summoningStats,
        items: itemsStats,
        monsters: monstersStats,
        general: generalStats,
        combat: combatStats,
        goblinRaid: goblinStats,
        astrology: astrologyStats,
        shop: shopStats,
        township: townshipStats,
        cartography: cartographyStats,
        archaeology: archaeologyStats,
        corruption: corruptionStats,
        harvesting: harvestingStats
    },
    settings: {
        continueIfBankFull: settingcontinueIfBankFull,
        continueThievingOnStun: settingcontinueThievingOnStun,
        autoRestartDungeon: settingautoRestartDungeon,
        autoCloudSave: settingautoCloudSave,
        darkMode: settingdarkMode,
        showGPNotifications: settingshowGPNotifications,
        enableAccessibility: settingenableAccessibility,
        showEnemySkillLevels: settingshowEnemySkillLevels,
        showCloseConfirmations: settingshowCloseConfirmations,
        hideThousandsSeperator: settinghideThousandsSeperator,
        showVirtualLevels: settingshowVirtualLevels,
        showSaleConfirmations: settingshowSaleConfirmations,
        showShopConfirmations: settingshowShopConfirmations,
        pauseOnUnfocus: settingpauseOnUnfocus,
        showCombatMinibar: settingshowCombatMinibar,
        showCombatMinibarCombat: settingshowCombatMinibarCombat,
        showSkillingMinibar: settingshowSkillingMinibar,
        useCombinationRunes: settinguseCombinationRunes,
        enableAutoSlayer: settingenableAutoSlayer,
        showItemNotifications: settingshowItemNotifications,
        useSmallLevelUpNotifications: settinguseSmallLevelUpNotifications,
        useDefaultBankBorders: settinguseDefaultBankBorders,
        defaultToCurrentEquipSet: settingdefaultToCurrentEquipSet,
        hideMaxLevelMasteries: settinghideMaxLevelMasteries,
        showMasteryCheckpointconfirmations: settingshowMasteryCheckpointconfirmations,
        enableOfflinePushNotifications: settingenableOfflinePushNotifications,
        enableFarmingPushNotifications: settingenableFarmingPushNotifications,
        enableOfflineCombat: settingenableOfflineCombat,
        enableMiniSidebar: settingenableMiniSidebar,
        enableAutoEquipFood: settingenableAutoEquipFood,
        enableAutoSwapFood: settingenableAutoSwapFood,
        enablePerfectCooking: settingenablePerfectCooking,
        showCropDestructionConfirmations: settingshowCropDestructionConfirmations,
        showAstrologyMaxRollConfirmations: settingshowAstrologyMaxRollConfirmations,
        showQuantityInItemNotifications: settingshowQuantityInItemNotifications,
        showItemPreservationNotifications: settingshowItemPreservationNotifications,
        showSlayerCoinNotifications: settingshowSlayerCoinNotifications,
        showEquipmentSetsInCombatMinibar: settingshowEquipmentSetsInCombatMinibar,
        showBarsInCombatMinibar: settingshowBarsInCombatMinibar,
        showCombatStunNotifications: settingshowCombatStunNotifications,
        showCombatSleepNotifications: settingshowCombatSleepNotifications,
        showSummoningMarkDiscoveryModals: settingshowSummoningMarkDiscoveryModals,
        enableCombatDamageSplashes: settingenableCombatDamageSplashes,
        enableProgressBars: settingenableProgressBars,
        showTierIPotions: settingshowTierIPotions,
        showTierIIPotions: settingshowTierIIPotions,
        showTierIIIPotions: settingshowTierIIIPotions,
        showTierIVPotions: settingshowTierIVPotions,
        showNeutralAttackModifiers: settingshowNeutralAttackModifiers,
        defaultPageOnLoad: settingdefaultPageOnLoad,
        formatNumberSetting: settingformatNumberSetting,
        bankSortOrder: settingbankSortOrder,
        colourBlindMode: settingcolourBlindMode,
        enableEyebleachMode: settingenableEyebleachMode,
        enableQuickConvert: settingenableQuickConvert,
        showLockedTownshipBuildings: settingshowLockedTownshipBuildings,
        useNewNotifications: settinguseNewNotifications,
        notificationHorizontalPosition: settingnotificationHorizontalPosition,
        notificationDisappearDelay: settingnotificationDisappearDelay,
        showItemNamesInNotifications: settingshowItemNamesInNotifications,
        importanceSummoningMarkFound: settingimportanceSummoningMarkFound,
        importanceErrorMessages: settingimportanceErrorMessages,
        enableScrollableBankTabs: settingenableScrollableBankTabs,
        showWikiLinks: settingshowWikiLinks,
        disableHexGridOutsideSight: settingdisableHexGridOutsideSight,
        mapTextureQuality: settingmapTextureQuality,
        enableMapAntialiasing: settingenableMapAntialiasing,
        showSkillXPNotifications: settingshowSkillXPNotifications,
        backgroundImage: settingbackgroundImage,
        superDarkMode: settingsuperDarkMode,
        showExpansionBackgroundColours: settingshowExpansionBackgroundColours,
        showCombatAreaWarnings: settingshowCombatAreaWarnings,
        useCompactNotifications: settinguseCompactNotifications,
        useLegacyNotifications: settinguseLegacyNotifications,
        useCat: settinguseCat,
        throttleFrameRateOnInactivity: settingthrottleFrameRateOnInactivity,
        cartographyFrameRateCap: settingcartographyFrameRateCap,
        toggleBirthdayEvent: settingtoggleBirthdayEvent,
        toggleDiscordRPC: settingtoggleDiscordRPC,
        genericArtefactAllButOne: settinggenericArtefactAllButOne,
        hiddenMasteryNamespaces: settinghiddenMasteryNamespaces,
        enableDoubleClickEquip: settingenableDoubleClickEquip,
        enableDoubleClickOpen: settingenableDoubleClickOpen,
        enableDoubleClickBury: settingenableDoubleClickBury,
        showAbyssalPiecesNotifications: settingshowAbyssalPiecesNotifications,
        showAbyssalSlayerCoinNotifications: settingshowAbyssalSlayerCoinNotifications,
        enablePermaCorruption: settingenablePermaCorruption,
        showAPNextToShopSidebar: settingshowAPNextToShopSidebar,
        showASCNextToSlayerSidebar: settingshowASCNextToSlayerSidebar,
        sidebarLevels: settingsidebarLevels,
        showAbyssalXPNotifications: settingshowAbyssalXPNotifications,
        showSPNextToPrayerSidebar: settingshowSPNextToPrayerSidebar,
        enableStickyBankTabs: settingenableStickyBankTabs,
        useLegacyRealmSelection: settinguseLegacyRealmSelection,
        showOpacityForSkillNavs: settingshowOpacityForSkillNavs,
        bankFilterShowAll: settingbankFilterShowAll,
        bankFilterShowDemo: settingbankFilterShowDemo,
        bankFilterShowFull: settingbankFilterShowFull,
        bankFilterShowTotH: settingbankFilterShowTotH,
        bankFilterShowAoD: settingbankFilterShowAoD,
        bankFilterShowItA: settingbankFilterShowItA,
        bankFilterShowDamageReduction: settingbankFilterShowDamageReduction,
        bankFilterShowAbyssalResistance: settingbankFilterShowAbyssalResistance,
        bankFilterShowNormalDamage: settingbankFilterShowNormalDamage,
        bankFilterShowAbyssalDamage: settingbankFilterShowAbyssalDamage,
        bankFilterShowSkillXP: settingbankFilterShowSkillXP,
        bankFilterShowAbyssalXP: settingbankFilterShowAbyssalXP,
        alwaysShowRealmSelectAgility: settingalwaysShowRealmSelectAgility,
        enableSwipeSidebar: settingenableSwipeSidebar,
        keyBindings: keyBindings
    },
    news: news,
    lastLoadedGameVersion: lastLoadedGameVersion,
    scheduledPushNotifications: scheduledPushNotifications,
    skills: skills,
    mods: mods,
    completion: {
        completion: completion,
        birthdayCompletions: birthdayCompletions,
        clueHuntStep: clueHuntStep,
        areaCompletions: areaCompletions,
        strongholdCompletions: strongholdCompletions
    },
    currencies: currencies,
    levelCapIncreases: {
        increases: levelCapIncreases,
        selected: levelCapIncreasesSelected,
        bought: levelCapIncreasesBought,
        abyssalBought: abyssalLevelCapIncreasesBought,
    },
    realm: realm
}